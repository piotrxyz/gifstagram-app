{"version":3,"sources":["img/search.svg","img/github.svg","components/Form/Form.js","components/Input/Input.js","components/Button/Button.js","components/Wrapper/Wrapper.js","components/Logo/Logo.js","components/Gif/Gif.js","components/Main/Main.js","components/Footer/Footer.js","components/Label/Label.js","components/InputsWrapper/InputsWrapper.js","components/GithubLink/GithubLink.js","GlobalStyle.js","App.js","index.js","components/Gif/gif.module.css"],"names":["module","exports","Form","styled","form","Input","input","attrs","props","color","limit","css","language","Button","button","search","Wrapper","section","Logo","h1","Gif","image","link","title","alt","className","style","gif","href","aria-label","target","rel","img","src","Main","main","Footer","footer","Label","label","InputsWrapper","div","GithubLink","a","github","GlobalStyle","createGlobalStyle","App","useState","gifs","setGifs","setSearch","query","setQuery","setLimit","offset","rating","lang","setLang","useEffect","getData","fetch","process","response","json","data","onSubmit","e","preventDefault","console","log","htmlfor","type","placeholder","value","onChange","breakpointCols","default","1100","700","500","columnClassName","map","key","images","downsized","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ada16a85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.278d8d84.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.fc9f8ba7.svg\";","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\ndisplay: flex;\r\njustify-content: center;\r\nposition: relative;\r\nmargin-bottom: 10px;\r\n@media (min-width: 768px) {\r\n    width: 90%;\r\n    margin: auto;\r\n    margin-bottom: 10px;\r\n}\r\n`;\r\n\r\nexport default Form;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Input = styled.input.attrs(props => ({\r\n  color: props.color || \"black\",\r\n}))`\r\n\r\nfont-size: 20px;\r\nwidth: 100%;\r\nheight: 50px;\r\nborder: transparent;\r\nborder-radius: 0;\r\n-webkit-appearance: none;\r\n\r\n${props => props.limit && css`\r\n    background: transparent;\r\n    color: ${props => props.color};\r\n    width: 20px;\r\n    height: 25px;\r\n    font-size: 12px;\r\n    margin-left: 5px;\r\n\r\n    ::placeholder {\r\n      color: ${props => props.color};\r\n}\r\n  `};\r\n\r\n  ${props => props.language && css`\r\n    background: transparent;\r\n    color: ${props => props.color};\r\n    width: 50px;\r\n    height: 25px;\r\n    font-size: 12px;\r\n    margin-left: 5px;\r\n\r\n    ::placeholder {\r\n      color: ${props => props.color};\r\n}\r\n  `};\r\n`;\r\n\r\nexport default Input;","import styled from 'styled-components';\r\nimport search from '../../img/search.svg';\r\n\r\nconst Button = styled.button`\r\nbackground: url(${search}) no-repeat center;\r\nbackground-size: 30px;\r\nbackground-color: transparent;\r\nfont-size: 30px;\r\nwidth: 50px;\r\nheight: 50px;\r\nborder: transparent;\r\nborder-radius: 0;\r\nfont-family: sans-serif;\r\ncursor: pointer;\r\nposition: absolute;\r\nright: 0px;\r\n`;\r\n\r\nexport default Button;\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\nmargin-top: 10%; \r\n\r\n@media (min-width: 768px) {\r\nwidth: 90%;\r\nmargin: auto;\r\nmargin-top: 5%;\r\npadding-bottom: 5%;\r\n}\r\n`\r\n\r\nexport default Wrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst Logo = styled.h1`\r\ntext-align: center;\r\nfont-family: 'Gloria Hallelujah', cursive;\r\nfont-size: 40px;\r\nfont-weight: 300;\r\npadding-top: 5%;\r\na {\r\n    text-decoration: none;\r\n    color: white;\r\n}\r\n`\r\n\r\nexport default Logo;","import React from 'react';\r\nimport style from './gif.module.css';\r\n\r\nconst Gif = ({ image, link, title, alt }) => {\r\n  return (\r\n    <div className={style.gif}>\r\n      <a href={link} aria-label=\"gif link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img className={style.img} src={image} alt={alt} title={title} />\r\n      </a>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Gif;","import styled from 'styled-components';\r\n\r\nconst Main = styled.main`\r\nwidth: 100vw;\r\nmin-height: 69vh;\r\npadding: 5% 5% 0% 5%;\r\n@media (min-width: 768px) {\r\npadding: 5% 15% 0% 15%;\r\n}\r\n`\r\n\r\nexport default Main;","import styled from 'styled-components';\r\n\r\nconst Footer = styled.footer`\r\ncolor: white;\r\ntext-align: center;\r\nfont-size: 10px;\r\nfont-family: sans-serif;\r\npadding-bottom: 2%;\r\npadding-top: 2%;\r\n`\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\nfont-size: 10px;\r\ncolor: white;\r\nfont-family: sans-serif;\r\n`\r\n\r\nexport default Label;","import styled from 'styled-components';\r\n\r\nconst InputsWrapper = styled.div`\r\nposition: absolute;\r\ntop: 60px;\r\nright: 0;\r\ndisplay: flex;\r\njustify-content: space-around;\r\nalign-items: center;\r\nwidth: 175px;\r\nheight: 20px;\r\n`\r\n\r\nexport default InputsWrapper;","import styled from 'styled-components';\r\nimport github from '../../img/github.svg';\r\n\r\nconst GithubLink = styled.a`\r\ndisplay: block;\r\nbackground: url(${github}) no-repeat center;\r\nbackground-size: 20px;\r\nmargin: auto;\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-top: 5px;\r\ntransition: all .5s;\r\n&:hover {\r\n    transform: scale(1.2);\r\n    filter: invert(100%);\r\n}\r\n`\r\n\r\nexport default GithubLink;\r\n","import { createGlobalStyle } from 'styled-components';\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n::-webkit-search-cancel-button {\r\n  display: none;\r\n}\r\n\r\n::-webkit-textfield-decoration-container {\r\n  margin-left: 3%;\r\n}\r\n\r\ntextarea,\r\ninput.text,\r\ninput[type=\"text\"],\r\ninput[type=\"button\"],\r\ninput[type=\"submit\"] {\r\n  -webkit-appearance: none;\r\n}\r\n\r\nbody {\r\n  background: linear-gradient(to right, #56ccf2, #2f80ed);\r\n  overflow-x: hidden;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","// importing components\n\nimport React, { useEffect, useState } from 'react';\nimport Masonry from 'react-masonry-css';\nimport Form from './components/Form/Form';\nimport Input from './components/Input/Input';\nimport Button from './components/Button/Button';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Logo from './components/Logo/Logo';\nimport Gif from './components/Gif/Gif';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport Label from './components/Label/Label';\nimport InputsWrapper from './components/InputsWrapper/InputsWrapper';\nimport GithubLink from './components/GithubLink/GithubLink';\nimport GlobalStyle from './GlobalStyle';\nimport './masonry-grid.css';\n\n\nconst App = () => {\n  // api key protection\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  const [gifs, setGifs] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  const [limit, setLimit] = useState('');\n  const [offset, setOffset] = useState('');\n  const [rating, setRating] = useState('');\n  const [lang, setLang] = useState('');\n\n  useEffect(() => {\n    getData();\n  }, [query]);\n\n  // fetching data from giphy api using api key\n\n  const getData = async () => {\n    const response = await fetch(\n      `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${query}&limit=${limit}&offset=${offset}&rating=${rating}&lang=${lang}`\n    );\n    const data = await response.json();\n    setGifs(data.data);\n    // console.log(data.data);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log('updating search value');\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n    console.log('getting search value');\n  }\n\n  // limit\n\n  const updateLimit = e => {\n    setLimit(e.target.value);\n    console.log('updating limit value');\n  }\n\n  // const getLimit = e => {\n  //   e.preventDefault();\n  //   setLimit(limit);\n  //   console.log('getting limit value');\n  // }\n\n  const updateLang = e => {\n    setLang(e.target.value);\n    console.log('updating lang');\n  }\n\n  // const getLang = e => {\n  //   e.preventDefault();\n  //   setLimit(limit);\n  //   console.log('');\n  // }\n\n\n\n  // masonry responive columns set\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n\n  // rendering components to the root element, \n  // * components styled with styled-components\n\n  return (\n    <>\n      <GlobalStyle />\n      <Logo><a href=\"/mkcoders-app\">Gifstagram</a></Logo>\n      <Main>\n        <Form onSubmit={getSearch}>\n          <Label htmlfor=\"search\"></Label>\n          <Input\n            type=\"search\"\n            placeholder=\"Search for GIFs\"\n            value={search}\n            onChange={updateSearch}\n          />\n          <Button type=\"submit\" />\n          <InputsWrapper>\n            <Label htmlfor=\"results\">Results: </Label>\n            <Input limit\n              type=\"text\"\n              placeholder=\"25\"\n              value={limit}\n              onChange={updateLimit}\n            />\n            <Label htmlfor=\"language\">Sort by lang: </Label>\n            <Input language\n              type=\"text\"\n              placeholder=\"PL / EN\"\n              value={lang}\n              onChange={updateLang}\n            />\n          </InputsWrapper>\n        </Form>\n        <Wrapper>\n\n          {/* masonry grid layout for fetched gifs */}\n\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n            {gifs.map(gif => (\n              <Gif\n                key={gif.images.downsized.url}\n                image={gif.images.downsized.url}\n                link={gif.images.downsized.url}\n                title={gif.title}\n                alt={gif.title}\n              />\n            ))}\n          </Masonry>\n        </Wrapper>\n      </Main>\n      <Footer>\n        &copy; Piotr Kwak\n        <GithubLink\n          href=\"https://github.com/piotrxyz/mkcoders-app\"\n          title=\"app code link\"\n          aria-label=\"app code link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n        </GithubLink>\n      </Footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gif\":\"gif_gif__29ble\",\"img\":\"gif_img__tZvgf\"};"],"sourceRoot":""}